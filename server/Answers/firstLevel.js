module.exports = [
  {
    title: 'Ақпарат, энтропия және артықтығы. Жалғыз оқиғаның ақпараты',
    answer: `Ақпараттар теориясы ықтималды кодтау диаграммасы көмегімен және ақпаратты нақты, табиғи-ғылыми бағдарламаларда тасымалдау арқылы сипатталады. Сонымен қатар техникалық системалардағы ақпараттар ағынын талдауға және үйлесімділеуге мүмкіндік пайда болады. Ақпараттың техникалық көрінісін тұрмыстықтан айыру үшін лингвистикалық түсініктер жәрдемдесуі мүмкін: синтаксис, семантика және прагматика. Бұл түсініктерде синтаксис және семантика техникалық мағлұматтардың аналогы болып табылады. Синтаксис барлық мүмкін символдарды және символдар реттілігін анықтайды. Семантика олардың мәнін түсіндіреді. Дәл мағынасын және қолдану саласы прагматикамен түсіндіріледі. Прагматика мағлұмат, техникалық ақпарат және ақпарат сөзінің тұрмыстық түсінігін біріктіреді. Әдетте әрекетке үндеу немесе нұсқау ретінде түсінілетін “ақпарат” термині жеткізілуге міндетті хабарламаға айналады.
    • Синтаксис + семантика ⟶ Мағлұмат.
    • Мағлұмат + прагматика ⟶ Хабарлама.
    Алдағы талқылаулардың негізі ақпараттың қандай-да бір тәжірибемен орнатылатын шама ретінде түсінілуі болып табылады. Бұған 1948 жылы жарияланған Клод Шеннонның “Математикалық байланыс теориясы” атты еңбегі түрткі болды. Онда К. Шеннон заманауи ақпараттар теориясы түсінігіне анықтама берді және бүгінгі байланыс техникаларының негізін салды. Шеннон, мысал ретінде, сол уақытта кең таралған перфокарталарды келтірді. Тесік үшін арналған N мүмкін позициялы перфокартада нақты 2N хабарлама болады. Егер екі перфокарта болса, онда мүмкіндіктер саны 22N-ге тең болады. Осылайша, екі перфокарта алып жүрген мүмкін хабарламалардың саны бір перфокартадағы хабарламалар санының квадратына тең. Сонымен қатар екі перфокарта бір перфокартаға қарағанда екі есе артық ақпарат сақтай алатынын жорамалдауға болатын еді. Мұнда ақпарат өлшемін сипаттау үшін келесі еселікті беретін логарифмдық функция сұратылады:
    Ақпараттық екілік энтропия, ақпараттық шығындар болмаған кезде, Хартли формуласы бойынша есептеледі log2^N = Nlog2log2^2N = 2Nlog2
    Ақпарат алмасу, өзінің материалды емес табиғатына қарамастан, біздің өміріміздің ажыралмас бөлігі болып табылады. Заманауи ақпараттар теориясының негізін қалаушылардың бірі, Норберт Виннер, ақпаратты келесі түрде сипаттады [9]: 
    “Ақпарат ол материя да емес, энергия да емес, ақпарат ол ақпарат”.
    Н. Виннердің пікірінше, ақпарат ол материя және энергия секілді жаңа бір элемент. Ақпарат түсінігі ғылыми түрде қаншалықты күрделі болса, адамзат үшін ақпарат соншалықты маңызды. Біз қандай-да бір дербес оқиғаны мысалға ала отырып: “Бұл мағлұматтың мен үшін маңызы зор” - деп айтамыз. Мұндай субъективті көзқарас ақпараттың техникалық сипаттамасына тура келмейді.
    `,
  },
  {
    title: 'Энтропия және артықтығы',
    answer: `Энтропия - статистикалық тәуелсіз хабарларды шығаратын көзден бір қарапайым хабарламаға арналған ақпараттың көлемі.
    Ақпараттық энтропия – ақпараттың болжаусыздығы, бастапқы алфавиттің символының пайда болуының белгісіздігі. Ақпараттың жоғалуы болмаған жағдайда, берілген хабарды символына қатысты ақпарат санына сандық тең болады.
    Дербес оқиғаның ақпараты анықталғаннан кейін оқиғалардың дереккөзін қарастырайық. Оны суреттеу үшін оның құрамындағы оқиғалардың ақпараттарын қолданамыз. Термодинамикадағы секілді энтропия түсінігін енгіземіз. Термодинамикада энтропия жүйенің реттелмегендік тәсілі болып табылады. Ақпараттар теориясында энтропияға дереккөздің реттелмегендік әдісі деген анықтама береді. Дербес оқиғалардың ақпараттарын пайдаланып, дереккөз энтропиясын келесі келесі түрде бейнелейміз:
    X = {х1, х2, ... , хN} алфавитті және сәйкес р1, р2, ... , рN ықтималдықты қарапайым жадсыз дереккөздің энтропиясы тең болады
    Н(х) = ∑_i=1^N -p_i*log_2(p_i )  бит.
    Өзімізге дереккөздің кейбір оқиғалары мағлұм болатын ойынды елестетейік. Егер дереккөз әлдеқандай оқиғаға көз қырын салса, сіз оған батыл түрде тігіңіз және көп жағдайда сіз ұтатын боласыз. Егер барлық оқиғалар тең ықтималды болса, онда кез-келген оқиғаға тігіңіз: егер оқиғаның белгісіздігі максималды болса, ұтуға мүмкіндіктер минималды. `,
  },
  {
    title: 'Жадысыз дискретті ақпарат көздері үшін кодтау. Ақпарат көздерінің 1 - ші кодтау теоремасы',
    answer: `Энтропия тарауында энтропияның жадсыз дискретті дереккөздің орташа мағлұматы деген түсінік енгізілген болатын. Сонымен қатар дереккөздің кез-келген оқиғасы “иә” немесе “жоқ” деген нәтижелі екілік шешім реттілігіне ақпарат шығынысыз жіктелуі мүмкін екені көрсетілген болатын. Осылайша алфавиттегі әрбір оқиғаға 0 және 1 екілік символдарының кейбір реттіліктері жазылуы мүмкін (келешекте мұндай реттілікті оқиғаның кодты сөзі деп атайтын боламыз). Сонымен бірге ақпарат шығыны болмайды, себебі әр оқиға өзінің кодты сөзі арқылы тікелей қайта қалпына келтіріледі. Мұндай процесс дереккөзді кодтау деп аталады, ал барлық оқиғалардың кодты сөздерінің жинағы – дереккөз коды делінеді. 
    Кодты дарақтың тамырынан бастап әр деңгейде қабырғалар саны екі еселенеді, бұған қоса сол жақ тарапта бірліктерге сәйкес қабырғалар, ал оң жақта – кодты сөздердің нөлдеріне сәйкес қабырғалар жайғасады. Кодты сөздер тамырдан біткен түйінге алып баратын сәйкес қабырғаларды жүріп өткенде пайда болады. Мысал ретінде 0110 кодты сөзін қарап шығамыз.
    Егер біз N деңгейден өтсек, онда log2(2^N) бит = N бит ұзындықты кодты сөзге сәйкес 2^N біткен түйін аламыз және 2^N оқиғаны кодтауға болады. Бұл біткен түйіндерге дереккөздің бүкіл алфавитінен 2^N тең ықтималдықты оқиғалар сәйкес деп шамалайық. Онда әр оқиғаны кодтауға дереккөз энтропиясына тең дәл N бит жұмсалады. Кодты сөздің орташа ұзындығы мен дереккөз энтропиясының арасындағы байланысты дереккөздерді кодтау теоремасы жалпылайды.
    Дереккөздерді кодтау теоремасы I.
    Кез-келген негізгі алфавитті және Н(х) энтропиялы жадсыз дискретті  Х дереккөзi үшін n кодты сөзінің орташа ұзындығы теңсіздікті қанағаттандыратын D-типті префиксті код бар
    H(x)/Log(D) <= n <= H(x)/Log(D) + 1
    Префиксті код термині кодты сөздің ешқандай бастамасы басқа кодты сөз бола алмайды дегенді білдіреді. Бұл дегеніміз оқиғалар ағыны бұл жағдайлардың арнайы бөлінуінсіз де кодталуы мүмкін екенін айқындайды. D = 2 болған жағдайда екілік код қолданылады. Егер энтропия биттерде берілген болса n-ның орташа ұзындығы да екілік кодты қолдану арқылы биттерде өрнектелген болады. 
    `,
  },
  {
    title: 'Хаффман кодтары',
    answer: `Хаффман кодтары айнымалы ұзындықты кодты сөзді кодтар тобына жатады. Ең әйгілі айнымалы ұзындықты код – Морзе әліпбесі. Морзе әліпбесінің негізгі мақсаты – жиі кезесетін әріптерді қысқа ұзындықты кодты сөздермен тасымалдау және , керісінше, сирек кездесетін әріптерді ұзын кодты сөздермен орташа шығынды азайту үшін тасымалдау. Кодтаудың мұндай тәсілін сондай-ақ минималды шығынмен кодтау немесе энтропиялық кодтау деп атайды.
    Мысалы, Морзе әліпбесінде жиі кездесетін “Е” әріпі бір «∙» белгісімен, ал сирек “Х” төрт «- ∙ ∙ -» белгісімен кодталады.
    1952 жылы Хаффман ұсынған айнымалы ұзындықты кодты сөздермен кодтау әдісі жадсыз дискретті дереккөздер үшін ең қолайлы префиксті код болып табылатынын көрсетті. Яғни Хаффман коды сөзінің орташа ұзындығы минималды және де ол үтірсіз код болып табылады. «Үтірсіз код» термині синхрондау орнатылғанда кодты сөздердің арнайы бөлінуінсіз мәндес декодты үзіліссіз хабарламалар тасымалы мүмкін екендігін білдіреді.
    Префикстік кодта ешқандай кодты сөз басқа сөздің префиксі бола алмайды.
    Кодтау. Соңғы бірікпеден бастау. Құрама таңбаның біріші компоненті-не «0» символын, ал екіншісіне «1» символын енгізу. Бұл процессті барлық жәй таңбалар кодталмағанша жалғастыру.
    Бірнеше таңбалар біркелкі ықтималдыққа ие болған жағдайда бұл уақытқа дейін ең аз біріккен екі таңба қосылады. Бұл әрекетпен ақпарат тасымалдауды жеңілдететін кодты сөздердің ұзындықтарын туралау жүзеге асады.
    `,
  },
  {
    title: 'Байланысқан ақпарат көздерінің энтропиясы. Өзара және шартты ақпарат',
    answer: `Осы уақытқа дейін біз өз пікірлерімізде реттілікті оқиғаларың тәуелсіз болжамдарынан шығып отырдық. Бірақ, неміс орфографилық сөздігін ашқан күйде, біз бірден жақын орналасқан әріптер арасындағы тәуелділікті байқаймыз, мысалы: «qu», «ch», «ck», «tz» және «sch». Неміс мәтінін оқи отыра «q»-дан соң, сирек жағдайларды есепке алмағанда, «u» кездеседі. Бұл жағдайда «u» шарасыз оқиға секілді өзімен ешқандай ақпарат тасымалдамайды. Сондықтан, бұл тәріздес дереккөздер ақпаратын анықтау уақтысында оқиғалар арасындағы өзара байланысты ескеруіміз керек.
    Өзара және шартты ақпарат
    Ақпараттар теориясын аксиоматикалық құрылуы кезінде жұп оқиғалар ақпараты деген түсінік қолданылған. Бұл пайымдауларды еске алайық және жалпылайық. Екі дискретті X және Y дереккөздерді қарастырайық. Олардың оқиғаларын жұп оқиғаларға (xi, yi) біріктірейік. Сонда біз байланысты дереккөздердің қарапайым моделін аламыз.
    Егер екі дереккөз қандай-да бір тәсілмен өзара байланысты болса, онда бір дереккөздің оқиғасы басқа дереккөздің оқиғасы жайлы біршама болжам жасауға мүмкіндік береді. Ақпараттар теориясында бұл термин екінші дереккөздің анықталмағандығы төмендейтінін білдіреді, яғни дереккөздер өзара ақпарат алмасады.
    Шартты p(x/y) ықтималдығын енгіземіз – x оқиғасының ықтималдығы y оқиғасы орындалған шартта. Екі xi  және yi оқиғаларының өзара p(xi, yi) ықтималдығын олардың априорлы және шартты ықтималдықтары арқылы жүзеге асырамыз
    p(x_i,y_i )=p(x_i/y_i )p(y_i )=p(y_i/x_i )p(x_i ).
    `,
  },
  {
    title: 'Бірлескен және шартты энтропия',
    answer: ` Екі дереккөздің бірлескен энтропиясы барлық жұп оқиғалардың ақпараттарының математикалық күтімі ретінде анықталады.
    Екі Х және Y жадсыз дискретті дереккөздерінің бірлескен энтропиясы
     H(X,Y)/бит = -∑_x ∑_y p(x,y)log2(p(x,y))
    Бірлескен энтропия
    Бірдей алфавитті және оқиға ықтималдықтары бірдей бөліп таратылған екі x_1  және x_2 дереккөздің бірлескен энтропиясы келесі түрде анықталады
    H(x_1,x_2)= -∑_i=1^M ∑_j=1^M p(x_i,x_j)log2(p(x_i,x_j))
    Шартты энтропия.
    L-ші оқиғаның шартты энтропиясы, алдыңғы оқиғалардың L – 1 мағлұм болған жағдайда, келесі түрде анықталады
    H_∞(x) = lim_L->∞ H(X_L/X_1,H_2,...,X_L-1)
    `
  },
  {
    title: 'Жадты стационарлы дискретті ақпарат көздері. Энтропия',
    answer: `Ақпараттың аналогтық дереккөздерінің сигналдары сызық арқылы шектелген, сондықтан уақытта салыстырылған. Мәселен телефондық желідегі ұқсас сөйлесу сигналы мысал бола алады. Белгілеуден соң, ұқсас дереккөз дискреттікке айналады, және, мәселен, сигналды 256 деңгейге кванттаған соң, біз 8-битті 0-ден 255-ке дейінгі екілік толық сандар реттілігін аламыз. 5.1 суретте көрсетілгендей екі жақын сандардың мәндері ұқсас, себебі телефондық сигнал жиіліктің тар алқабында тасымалданады. Жақын есептеулердің уақытша қатынасына, яғни есептеу жадына байланысты, оның анықталмағандығы (ақпарат) ұқсас жадсыз дереккөзге қарағанда төмендейді, сол себепті қысу тәсілдерінің негізгі мақсаты, әсіресе видеосигналдарды тасымалдау кезінде, шығынның төмендеуі болып табылады.
    Жадты дискретті дереккөздердің энтропиясын қалай анықтаймыз деген сұрақ туындайды. Мақсат қоюдан бастайық.
    Дискретті Х дереккөзіне X={a_1,a_2,…,a_N } дереккөзінің алфавитіне тиесілі x_n оқиғасының реттілігі орындалуы болып табылатын уақытта дискретті стохастикалық процесс деген анықтама берсек те болады.
    Түсініспеушілік болмауы үшін біз алфавит құрамын грек әріптерімен белгіледік. Бұл жағдайда n-ші оқиғаның x_n айнымалысының орнына X алфавитінің кез-келген саны қойылуы мүмкін.
    Оқиға реттіліктерінің бірлескен ықтималдықтары уақыт санағының бастапқы нүктесінің таңдауына тәуелді емес болған жағдайда  дискретті дереккөз стационарлы болып табылады.
    Бақылаулардың санақ нүктесінен тәуелсіз болуы біз таңдауды уақыттың кез-келген сәтінен бастай аламыз дегенді білдіреді, яғни статистика бақылау уақтысының басталуына тәуелді емес.
    `,
  },
  {
    title: 'Ақпарат көздерінің 2- ші кодтау теоремасы',
    answer: `Енді біз ақпараттар теориясын тағы бір теоремамен толықтыра аламыз. Дереккөздер оқиғасын L ұзындығының блогына біріктіп және бұл блоктарды кодтай отырып, оқиға үшін кодты сөздің орташа ұзындығы L → ∞ тұсында H_∞ (x) дереккөзінің энтропиясына жақын жетуі мүмкін. Сонымен қатар дереккөз жады толықтай ескеріледі.
    H_L (X) энтропиялы стационарлы дискретті дереккөздің кодтау теоремасы.
    L Ұзындықты блок үшін бір ¯n оқиға үшін кодты сөздің орташа ұзындығы келесі теңсіздікті қанағаттандыратын D-типті префиксті код бар
    H_L(X)/Log(D) <= n <= H_L(X)/Log(D) + 1/L
    Осылайша, кез-келген шағын 𝛿 үшін блоктарды кодтау тәсілі бар, онда L > 1/𝛿 бар оқиға үшін ¯n оқиғаның кодты сөзінің орташа ұзындығына (5.18) теңсіздік орындалады. Дереккөздерді кодтау теоремасы 2 бойынша L блогының ұзындығын жоғарылатқан сайын, біз H(x)=H_∞ (x) энтропиясына қалағанымызша жақындай аламыз. Бірақ, практикада біршама шектеулер бар. L oқиғадан тұратын блок декодталуы үшін, ол толықтай қабылдануы шарт, бірақ ол өз уақтысында декодтаудың жарамайтын тоқтауларына
    және жад буферінің шектен тыс ауқымына алып келуі мүмкін.
    `,
  },
  {
    title: 'Марковтың ақырғы тізбектері. Марков тізбектерінің уақыт бойынша дискреті',
    answer: `Марковтық тізбекті сипаттаудың бастапқы пункті ахуалдар көпшілігі болып табылады
      S={S_1,S_2,…,S_N }
    Мұндағы N ахуалдар ықтималдықтарын n уақыт сәтінде бөліп таратудың натуралды және стохастикалық векторы
      p_n=(p_n(1),p_n(2),…,p_n(N)).                         
    Марков тізбегін толықтай анықтау үшін бізге кез-келген n уақыт сәті үшін p_n(i) ықтималдықтарын есептеу тәсілін берy қалады. Ықтималдықтар анықтамасынан шығатыны
      0 ≤ p_n(i) ≤ 1 ⩝ i=1,2,…,N және ∑_(i=1)^N p_n(i)=1.
      Марков процессі деп қазіргі мағлұм болған жағдайда өткен болашаққа әсер етпейтін процессті айтамыз.
      Марков тізбектері стационарлы, қалыпты және гомогенді болса оларды пайдалану оңайға соғады.
      Күйлер арасындағы өтпелі ықтималдықтар уақытша санақ нүктесінің таңдауынан тәуелсіз болса, Марков тізбегі гомогенді.
      
    `,
  },
  {
    title: 'r жадымен ақырғы дискретті марковтың ақпарат көздері',
    answer: `Марковтық тізбектерді соңғы дискретті жадты дереккөздерді моделдеу үшін нәтижелі қолдануға болады. Дереккөздердің жадты стохастикалық параметрлері уақытта орташа шама ретінде есептелінуі мүмкін екенін ескере отырып, алдағы пікірлерге жол көрсетейік.
    X={a,b,c,d} алавитті {x[n]}={a,b,a,c,b,b,a,d,a,d,b,b,a,c,…} дерек-көзінің ерікті реттілігі берілген болсын. Біз алдынырақ оқиғалар жиілігін p(a),p(b),p(c) және p(d) оқиғаларының ықтималдығы ретінде анықтаған тұғынбыз және оқиғаларды тәуелсіз деп санап дереккөздің энтропиясын анықтаған тұғынбыз. Егер дереккөздің жады бар болса, онда оның энтропиясы тек аз болуы мүмкін, яғни алдынырақ біз бағалауды жоғарыдан табатын едік.
    Анализге дереккөз жадысын қалай қосуға болады деген сұрақ туындайды.
    Ол үшін оқиғалар арасындағы тәуелділікті ескере отыру қажет. Екі ретті оқиғаның шартты p(a/a),p(b/a),p(c/a),p(d/a),p(a/b),… және p(d/d) ықтималдықтарын жұп оқиғалардың жиілігін есептеу арқылы бағалайық. Мұнан соң дереккөз жұп оқиғалардағы бірінші символдарға сәйкес төрт кіші дереккөздерге бөлінуі мүмкін.
    Осылайша, әрбір осындай кіші дереккөз қандай-да бір дербес жадсыз дереккөз ретінде қаралуы мүмкін. Мұндай дереккөздің энтропиясы мағлұм тәсілдермен есептелуі мүмкін. Бастапқы жадты дереккөз төрт жадсыз кіші дерекөздердің стохастикалы жинағы болуы мүмкін, ал оның энтропиясы бұл кіші дереккөздердің энтропияларының орташа мәні арқылы анықталуы мүмкін. Біз пайымдауларды кіші дереккөздердің ұзын ахуалдарын қарап шығып (мәселен, а, а және а, b, c, d векторлары), бастапқы дереккөздің бүкіл жадысы толмағанша жалғастыра аламыз.
    `,
  },
  {
    title: 'Стационарлы марковтық ақпарат көзінің энтропиясы',
    answer: `N ахуалға, яғни әрқайсысының энтропиясы төмендегідей N кіші дереккөзге ие М символды алфавиті бар стационарлы марковтық дереккөз
    H(X|S_i)=-∑_(m=1)^M p_(S_i)(x_m) log_2(p_(S_i)(x_m))бит,
    кіші дереккөздердің энтропиясының математикалық күтіміне тең энтропияға ие
    H_∞(x)=∑_(i=1)^N p_∞ H(X/S_i)
    Бекітудің дәлелі дерліктей қиын, сондықтан оны келесі бөлімдерді түсінуге зақымсыз жіберуге болады.
    Дәлел. Марковтық дереккөздің энтропиясы [10].
        Дәлел үш қадамда келтіріледі.
        Қадам 1.
        Бірінші қадамда мағлұм Z_0=S_j ахуалда марковтық дереккөздің шартты энтропиясы келесі түрде анықталатынын көрсетеміз
        H(X_l|X_(l-1),…, X_0, Z_0=S_j) = ∑_(i=1)^N π_l (i/j) H(X/Z=S_i), 
        X_l арқылы l-ші кіші дереккөз белгіленген, ал Z_l арқылы l-ші қадамдағы ахуал.
        Қадам 2.
        Осы уақытқа дейін біз назарға алынған бастапқы ахуалдан шықтық. Марковтық дереккөздің энтропиясын математикалық күтім арқылы анықтау үшін бастапқы ахуалды кездейсоқ деп есептейміз
        H(X_l|X_(l-1),…, X_0, Z_0) = ∑_(j=1)^N ∑_(i=1)^N p_(Z_0)(j) π_l(i/j)H(X|S_i).  
        Қадам 3.
        Энтропия үшін өрнекті мағлұм бастапқы ахуал тұсында қарап шығайық және оны «тізбек қағидасы» арқылы түрлендіреміз
        1/L H(X_L,…,X_0 |Z_0 )=1/L[H(X_0 |Z_0 )+H(X_1 |X_0,Z_0 )+⋯+H(X_L |X_(L-1),…,X_0,Z_0 )]  
    `,
  },
  {
    title: 'Стационарлы марковтық ақпарат көздерін кодтау',
    answer: `Ең әуелі 5.2.1 теоремада қалыптасқан дереккөздерді кодтау теоремасын еске алайық. Бұл теоремада L символды блоктар қаралған. Теорема бойынша L шексіздікке ұмтылған жағдайда L ұзындықты блоктар үшін кодты сөзінің орташа ұзындығы бір символға бірлескен H_L (X) энтропияға жақын префиксті код бар.
    r жадты марковтық дереккөздің жағдайында, блокқа арналған L = r ұзындықты бірлескен энтропия шекті жағдай болып табылады және кодтау теоремасы келесі түрде қалыптасуы мүмкін:
    r жадты және H_∞ (x) энтропиялы стационарлы марковтық дереккөздер үшін кодтау теоремасы.
    L≥r ұзындықты блок үшін кодты сөзінің орташа ¯n ұзындығы келесі теңсіздікті қанағаттандыратын D-типті префиксті код бар.
    H_∞(X)/Log(D) <= n <= H_∞(X)/Log(D) + 1/L
    Марковтық дереккөздің жадсыз кіші дереккөздерге бөлінуінен оптималды кодтау стратегиясы пайда болады.
         Егер бастапқы ахуалдар мағлұм болса, онда дереккөздерді кодтау уақтысында келесі ахуалдар біріңғай анықталған болады. Сонымен бірге, тасымалдағышта және қабылдағышта әрбір көпшілік кіші дереккөздер үшін ахуалдар және символдардың ықтималдықтарының бөлінуін ескере отырып кодтау және декодтау жүргізуге болады.
         Хаффман кодтарының практикалық жүзеге асуы ауқымды кодтық ұтысқа жету үшін дерліктей үлкен ұзындықты блоктарды кодтау қажет екенін көрсетеді. Мұнан басқа, кәдімгі ахуалдар әрдайым r символдармен анықталуы қажет, себебі үлкен ұзындықты блоктарға өту күрделі болмауы керек.
         Ұсынылып отырған қарапайым стратегия дереккөздің жадын толық ескереді, және шекті жағдайда, оптималды префиксті кодты алуға мүмкіндік береді. 
         r жадты және H_∞ (x) энтропиялы стационарлы марковтық X дереккөзді кодтау.
    1. Дереккөздің l=r+1 символдарын блоктарға біріктіру.
    2. Блоктар үшін Хаффман кодтауын жүргізу.
    3. Егер символ  үшін кодты сөздің орташа ұзындығы H_∞ (x)  энтропиясы-
    нан дерліктей өзгешеленетін болса, онда келесі символдардың есебінен блоктың ұзындығын жоғарылату. Үлкен ұзындықты блоктар үшін Хаффман кодтауын жүргізу. Бұл процессті кодты сөздің орташа ұзындығының энтропияға жақындағанына дейін жалғастыру.
    `,
  },
  {
    title: 'Мәліметтерді сығу. Арифметикалық кодтау',
    answer: `Деректерді қысудың мақсаты дереккөздерді оптималды кодтау тәсілімен ақпаратты сақтауға немесе тасымалдауға кететін техникалық шығынды минимизациялау болып табылады. Сонымен қатар, екі түсінікті ажыратады:
    ● Жоқ мағлұмат – бұл тасымалдағанда мән берілмейтін ақпарат. Мысал ретінде дәстүрлі телефонияны келтіруге болады. Телефондық каналдарда ақпарат тасымалдау 3,4 кГц тілкемде жүзеге асады. Барлық басқа спектральді құрамалар ескерілмейді, сонымен қатар тасымалданып жатқан ақпараттың біраз бөлігі жоғалып кетеді. Бастапқы сөйлемдік сигнал соңғы қабылдағышта толықтай қайта қалпына келуі мүмкін емес екендігі айдан анық. Бұл жағдайда шығыны бар кодтау жайлы айтамыз.
    ● Шығын дегеніміз хабарламада қабылдағыш үшін қажетті мағлұматтың бірнеше мәрте қайталануы. Шығынды ақпарат жоғалтусыз жоюға болады. Мысал ретінде Хаффман кодтауын келтіре аламыз. Мұндай кодтауды шығынсыз кодтау деп атайды.
    Деректерді қысудың маңызды мысалы сандық радиохабарлама (Digital Audio Broadcasting, DAB) және сандық телевидение (Digital Video Broadcasting, DVB) болып табылады. Екі система да MPEG (Motion Pictures Expert Group) стандарттарын қолданатын аудио және видео сигналдарды кодтау негізінде жұмыс істейді. Аудиосигналды кодтау жасырын спектральді және уақыт эффектілерін қолданатын сөйлем қабылдаудың психологиялық үлгісінде негізделген, солай бола тұра сигналды блокта аудиосигналдың құлаққа есітілмейтін бөлігі (беймағлұм ақпарат) жойылады. Ұқсас эффекттер видеосигналды кодтау уақтысында да пайдаланылады (яғни қимылдың психологиялық әсері). Бейнелерді кодтау одан да жоғары қысу дәрежесіне жетуге мүмкіндік береді.
    Қысу дәрежесі тасымалдау үшін шығынмен немесе ақпаратты k_0 қысусыз сақтау және қандай-да бір k_m қысу әдісін пайдалану шығыны менен анықталады
    G_k = k_0 - k_m / k_0
    Қысу дәрежесі қолданылып жатқан алгоритмге және дереккөс қасиетіне байланысты. 
    Мағлұматтарды қысу алгоритмін үш бөлікке бөлуге болады:
    1. Статикалық алгоритмдер, мысалы, Хаффман кодтауы. Неміс әдеби мәтінін Хаффман әдісімен қысу ASCII стандартты ерікті символдарынан тұратын ақпаратты қысумен салыстырғанда, шамамен 50% ұтысқа жетуге мүмкіндік береді.
    2. Адаптивті алгоритмдер, мысалы, түрлендірілген Хаффман кодтауы. Мұнда символдардың бөліну ықтималдықтары бастапқыда бірқалыпты болады, ал кейін статистиканың жинақталуына байланысты уақытта өзгереді.
    3. Динамикалық  алгоритмдер,  мысалы  ITU  V42.  bis  ұсынысында қолданылатын кодтау.
    Энтропиялық кодтаудың негізгі мәселесі символдар ықтималдық-тарының бөлінуін білуді болжау болып табылады. Көп жағдайда символдар статистикасы алдын-ала беймағлұм және эффективті кодтаудан алдын жиілік талдауы болуы қажет. Бұл жерде бізге көмекке универсалды алгоритмдер келеді.
    ● Адаптивті болып табылатын универсалды қысу алгоритмдері априоролық статистиканы қажет етпейді. Мұндай эффективті кодтау кодер кірісіне ақпарат келуімен дереу басталады.
    ● Мұнан басқа, дерліктей жеңіл техникалық күрделікті «жылдам» алгоритмдер бар.
    ● Шамаланған алгоритмдердің әрбірі қысудың жоғары дәрежесіне жетуге көмектеседі.
    Қысу әдістерінің мысалы ретінде, екі маңызды алгоритмді қарап шығайық: жүйе барысында динамыкалық жиілік талдау жүретін арифметикалық кодтау және Лемпель-Зивтің универсалды алгоритмі. Лемпель-Зивтің LZ77 алгоритмі 1977 жылы ұсынылған болатын және 1984 жылы түрлендірді. Ол ITU V.42.bis ұсынысында қолданылады және LZW алгоритмі деп аталады. 
    `,
  },
  {
    title: 'Лемпеля-Зива кодтауы',
    answer: `Лемпель – Зивтің LZ77 кодтау алгоритмі динамикалық сөздіктер ұстанымдарында негізделген. Біз бұл концепцияны қысқаша айтып өтеміз және кәдімгі мысалдарда айқындаймыз.
    Агоритм негізінде 4 негізгі идея жатыр:
    1. Әрбір келесі кодталған символдар реттілігі алдын кодталған символдарға онымен бірге барлық тасымалданған және қабылданған ақпараттарды өзара келіспейтін сөздерге бөлетін амалмен қосылады.
    2. Мұндай бөліну жадта сақталады және алдағыда сөздік ретінде қолданылады.
    3. Кодтау қалыптасқан фразалар сөздігінен фразаларға көрсеткіштер арқылы орындалады.
    4. Кодтау блоктарға ориентирленген динамикалық процедура болып табылады. Кодтау процессінің өзі фразалар сөздігін және Look-ahead буферін қамтамасыз ететін жылжымалы терезелермен толықталуы мүмкін.
    Тағы бір қызық жағдай Character Rans деп аталатын символдардың қайталануы болып табылады. Бұл жағдайда символды алмастыру үшін екі байрақ қолданылады. Бірінші «0» мәтіннің ерекшелігінің нышаны болып табылады.  Келесі  «1»  және  символ  символдың  қайталанатынын  білдіреді.
    Екінші байрақта қайталанулар саны және келесі символ көрсетіледі.
    Кодтауға жұмсалатын шығын w_p фразалар сөздігінен, w_L буферінің Look ahead ұзындығынан және көрсеткіштің екілік көрсетуіне жұмсалатын шығыннан тұратын терезенің ұзындығы арқылы анықталады
    K_E/бит=log_2(w_p)+log_2(w_L) +8.
    Лемпель – Зив кодтауы кодтауға жұмсалатын шығындар, яғни екілік есептегі көрсеткіш ұзындығы орташа мәнде тікелей көшіруге қарағанда, мысалы бір символға 8 бит сәйкес келетін ASCII кодымен көшрігенде кіші болып табылған жағдайда, мағлұматтарды қысуға алып келеді.
    Кәдімгі жағдайда w_p=2^12=4096 және w_L=2^4=16 және көрсеткіштің екілік көрсетілуіне жұмсалған шығындар 24 биттң құрайды. Фразалар сөздігінде бар төрт әріптен тұратын фраза үшін, экономия, ASCI (32 бит) кодымен тікелей кодтағанға қарағанда, 25 % құрайды.
    Лемпель – Зив кодтауы үшін:
    ● Жиі пайда болатын символдар тізбегі өте нәтижелі кодталады;
    ● Сирек пайда болатын символдар және символдар реттіліктері уақыт өте фразалар сөздігінен жойылып кетеді;
    ● Қайталанатын символдар нәтижелі кодталады;
    ● Нөлдік фразаларды кодтау үшін шамамен көп көлемдегі бит шығындалады;
    ● Ақпараттар теориясының әдістері Лемпель – Зив әдісімен кодтау асимптотикалық түрде оптималды болып табылатынын дәлелдеуге мүмкіндік береді. Бұл дегеніміз өте ұзын мәтін үшін шығын жойылады, яғни бір символды кодтауға қажетті биттердің орташа саны мәтіннің энтропиясына ұмтылады;
    ●  Ұзын мәтіндер үшін практикалық түрде жетімді қысу дәрежесі            50 – 60 % құрайды.    
    `,
  },
  {
    title: 'Жадысыз дискретті арналар мен ақпараттарды тасымалдау. Екілік симметриялық арна',
    answer: `Байланысты дереккөздер үшін бірлескен, өзара және шартты пар оқиғалар (символдар) ақпараттары деген негізгі түсініктер енгізілген болатын. Олардың негізінде біз ақпараттың іргелі түсініктеріне келдік – бірлескен, өзара және шартты энтропия(4.3 кестені қараңыз). Бірлескен және шаррты энтропиялар ықтималдықтар теориясында да ұқсастықтары бар және екі дереккөздің барлық жұп оқиғаларының бірлескен және шартты ақпараттардың математикалық күтімі ретінде анықталатыны сол жерде көрсетілген.
    Біз бұл пікірді бірлескен энергияға зер салу арқылы жалғастырамыз. Ақпарат тасымалдау каналдарын сипаттау үшін екі байланысты дереккөз тұжырымдамасын қолданамыз. Нәтижесінде біз канал арқылы ақпарат тасымалдау мүмкіндігін яғни каналдың өткізгіштік қабілетін бағалай аламыз.
    Байланыс каналының Шеннондық үлгісінде бірінші дереккөздің(хабарлағыш) мағлұматы канал арқылы қабылдағышқа тасымалданады және пайдаланушыға беріледі. Пайдаланушы үшін қабылдағыштың шығысы ғана маңызды яғни қабыл-дағыштың өзі ақпараттың қайнар көзі болып табылғандықтан байланысты дерекөздер үлгісі “Хабарлағыш – Канал – Қабылдағыш” тізбегіне толық жарамды.  
    Егер ақпарат тасымалдау жүзеге асып жатса, бірінші дереккөз символдары екінші дереккөз символдарына әсер етуі тиіс. Мысал ретінде екілік жадсыз симметрилы каналдарды қарастырамыз.
    `,
  },
  {
    title: 'Ақпаратты тасымалдау',
    answer: `Каналды өтпелі ықтималдықтар жәрдемімен суреттеу ақыр аяғында бірлескен жұп оқиғалар ықтималдықтарына әкеледі. Осы тұрғыдан алғанда, екі дереккөз де ақпарат тасымалдау үлгісінде бірдей мәнге ие, сол себепті ақпарат тасымалдау бағытын ескере отырып дереккөздерді хабарлағышқа және қабылдағышқа бөлу қазір және мұнан былай мағынасыз.
    Екі дереккөздің бірлескен энтропиясы барлық мүмкін жұп оқиғалар ақпаратының математикалық күтімі ретінде анықталған
    (Н(Х,Ү))/бит=-∑_X ∑_Y p(x,y) log_2p(x,y)
    Шартты энтропия да дәл осылай анықталады
    (Н(Х/Ү))/бит=-∑_X ∑_Y p(x,y) log_2p(y,x)
    Мұнан шығады
    H(X, Y) = H(Y) + H(X/Y) = H(X) + H(Y/X)
    және теңдік белгісі тек қана тәуелсіз дереккөздер үшін қойылады.
    Каналмен байланысты екі дереккөз жағдайында, бірлескен белгісіздік төмендейді, себебі бір дереккөздің оқиғасы басқа дереккөз оқиғасын шамалауға ерік береді. Ақпарат теориясының тұрғысынан алғанда, белгісіздіктің төмндеуі дереккөздер арасындағы мағлұмат алмасуды тұспалдайды. Ұқсас ой жүгірте отырып канал арқылы тасымалданып жатқан ақпараттың орташа мәні барлық жұп оқиғалардың өзара мағлұматтарының математикалық күтімі ретінде анықталады деген шешімге келеміз.
    `,
  },
  {
    title: 'Арнаның өткізу қабілеттілігі. Өткізу қабілеттілігі',
    answer: `I(X; Y) шамасы ақпараттар теориясында маңызды рөлге ие және байланыс каналы арқылы ақпарат тасымалдау процесін сипаттайды. I(X; Y) каналдың өту ықтималдығынан және канал кірісіндегі символдар ықтималдықтарын бөлуге байланысты.
    Алдағы ой жүгіртулер үшін көзге түскен өту ықтималдықты жадсыз дискретті каналды қарастырамыз және өзімізге келесі сауалды қоямыз: Бұл канал арқылы қаншалықты максималды ақпарат тасымалдай аламыз?
    Каналдың өткізгіштік қабілеті берілген өту ықтималдықтары менен Х дереккөзі символының барлық кіріс бөлінулеріне тасымалданып жатқан максималды ақпаратқа тең
    С=max I(X;Y).
        X
    Өткізгіштік қабілеттің өлшем бірлігі – бит/символ. Мысалы, егер канал арқылы секундына 1 символ тасымалданып жатса, онда сонымен қатар бит/символ өлшем бірлігі турасында да айтуға болады.
    Максимум барлық мүмкін дереккөз кірістерінен іздестірілгендіктен, өткізгіштік қабілет каналдың өту ықтималдықтарына тәуелді. 
    Математикалық тұрғыдан алғанда жадсыз дискретті каналдың өткізгіштік қабілетін іздеу максимум I(X;Y) ақпаратты қамтамасыз ететін дереккөздің кіріс символдарының ықтималдықтарының бөлінуін іздегенмен тең. Солай бола тұра каналдың кіріс х € X символдарының ықтималдықта-рына шектеу қойылады
    0 < p(x) <= 1 жане ∑_X p(x) = 1
    Әсілінде,  I(х, у) максимумын (7.44) шектеулер тұсында мультипликатты Лагранж әдісін қолдану арқылы анықтауымыз мүмкін. Бірақ , мұндай шешім шамадан тыс шығынды қажет етеді. 
    Симметриялы жадсыз дискретті каналдарда өткізгіштік қабілетке Х дереккөзінің кіріс символдарының ықтималдықтарын бірқалыпты бөлу арқылы жетеміз..
    `,
  },
  {
    title: 'Жойылатын екілік симметриялық арнаның өткізу қабілеттілігі',
    answer: `ЕСК-нің маңызды жиі кездесетін жағдайы ақаулы екілік симметриялы канал (АЕСК) немесе ақаулы екілік канал (Binary Erasure Channel, ВЕС - ағыл.). ЕСК секілді ақаулы екілік канал аддитивті ақ гаусс шуы(ААШС) менен канал арқылы ақпарат тасымалдаудың жеңілдетілген үлгісі болып табылады. 7.11 суретте АЕСК-де дұрыс шешім қабылдау ережесі көрсетілген. Суретте жіберілген “0” немесе “1” символдары шешімдерімен қатар мұнда кейде қабылданған “е” (Erasure-ағыл.)  символын өшіру шешімі қабылданады. Өшіру детекторланған аналогтық V сигналы тығыз орналасқан шартты функциялардың ықтимал f(V/0) және f(V/1) мәндері нөлге жақын болғандағы зонаға түскен уақытта жүзеге асады. 
    Детекторланған сигналдар ықтималдығының тығыз орналасу және шешім қабылдау аймағының шартты функцилары.
    Ақаулы екілік каналда “0” немесе “1” символдары турасындағы “қатігез” шешімнің орнына “жұмсақ” шешім қабылданады. Бұл жағдайда бізде қабылданған екілік символдың жарамдылығы жайында мағлұматтар бар. Осыған байланысты, мағлұматтар тасымалдау техникасында, “қатігез” және “жұмсақ” шешімдер турасында айтады. “Жұмсақ” шешім сәйкес кодталған мағлұматпен бірлескен түрде кейбір жағдайларда артығырақ жарамды мағлұмат тасымалдауға септігін тигізеді. 
    `,
  },
  {
    title: 'Жадысыз дискретті арналар үшін кодтау теоремасы',
    answer: `Әр символ ТS секунд ішінде берілетін С [бит/символ] өткізгіштік қабілетті жадсыз дискретті каналды қарастырайық. Мұнда С[бит/сек] = С[бит/сек]/ТS.
    Қандай-да бір Х дереккөзінің ТS уақыт ішінде өлшенге энтропиясы Н(Х)-ке тең болсын. Бұл жағдайда келесі теорема орынды
    Канал үшін кодтау теоремасы (Шеннон теоремасы).
    Х дереккөзі үшін R — H(X)/TS [бит/сек] және R < С жылдамдықты бір код бар, және оның жәдемімен Х дереккөзінің мағлұматы байланыс каналы арқылы С[бит/сек] жылдамдықпен төмен қате ықтималдығымен тасымалдана алады.
    Канал үшін кодтау теоремасының дәлелі дерліктей күрделі сондықтан бұл жерде келесі ескерулермен шектелгеніміз жөн.
         ● Кодтау теоремасының дәлелі кездейсоқ шексіз өлшемді кодтарды және максималды х ақиқатқа жақын, төмен қате ықтималдығын қамтамасыз ететін декодерді қолдануды қажет етеді. Дәлел ешқандай конструктивті шешімдерді қажет етпейді. Онда тек қана статистикалық қасиеттер мен шексіздікке ұмтылатын блок ұзындықты блок кодтары үшін ақтық өткелдер қолданылады. Дәлелде оптималды кодтардың конструкциясына ешқандай нұсқау берілмейді. 
         ● Сонымен қатар кодтау теоремасы R тасымалдау жылдамдығы үшін жоғарғы шекті анықтайды.
         ● Теореманы дәлелдеу уақтысында техникалық қол жетімді ақпарат тасымалдау жылдамдығын бағалауда қолданылатын  R0 экспоненциалды бағалау көрсеткіші енгізіледі.
    `,
  },
  {
    title: 'Үздіксіз ақпарат көздері мен арналар. Дифференциалдық энтропия',
    answer: `Екінші бөлімде энтропияның дереккөздің анықталмағандық шамасы деген сипаттамасы берілген. Сонымен қатар, энтропия кездейсоқ тәжірибелер арқылы өлшенеді деген болжам қалыптасқан еді. Бұл бөлімде үздіксіз дереккөздерге біз ұқсас амалдар қолданатын боламыз.
    Нақты алфавитті дереккөздердің орнына шығысы үздіксіз сигналдар болып табылатын дереккөздерді қарап шығамыз. Мұндай сигналдардың мысалы ретінде біз телефон каналдарындағы уақытта өзгеретін кернеуді келтіре аламыз. 8.1 суретте шығысы t уақыттың кездейсоқ функциясы болып табылатын x(t) ұқсас сигналды X үздіксіз дереккөзі көрсетілген. x(t)-ның мәндерін X дереккөзі жайлы мағлұмат бар уақыттың кейбір назар салынған сәтіндегі кездейсоқ тәжірибе ретінде қарап шығамыз.
    Дифференциалдық энтропия
    8.2 суретте канал арқылы байланысқан екі үздіксіз X және Y дереккөздері көрсетілген. Мұнда, ықтималдықтардың орнына, стохастикалық айнымалылардың ықтималдықтарының бөліп тарату тығыздықтарының функциясы тұрады.
    Стохастикалық айнымалыларды және олардың ықтималдықтарды бөліп тарату тығыздықтарының функцияларын қолдану дискретті дереккөздерге ұқсатып екі үздіксіз дереккөздер үшін ақпарат, энтропия, шартты және өзара энтропия түсініктерін енгізуге мүмкіндік береді.
    Үздіксіз X дереккөзін дискреттіге түрлендіреміз. Бұл үшін Δ қадамды дереккөздің ұқсас шығысның мәнін кванттаймыз.
    Мұнан басқа, ақпараттар теориясында әдеттегідей дереккөзді уақытта дискретизациялаймыз. Нәтижесінде, X_0,X_1,X_2,… стохастикалық айнымалы-ларының реттілігін аламыз. 
    Δ→∞ тұсында log_2(Δ) шамасы шексіздікке ұмтылады. Нәтижесінде, I(x_i ) үшін өрнек сондай-ақ ∞–ке ұмтылады. Бұл ғажаптанатын нәрсе емес, кванттау қадамының төмендеуіне байланысты бөлек оқиғалар (дереккөз алфавитінің символдары) саны жоғарылайды және сонымен қатар дереккөз анықталмағандығы да өседі.
    log_2Δ шамасы дереккөзге тәуелді емес және оны суреттеу үшін мүлдем тура келмейді, сол себепті, үздіксіз дереккөз ықтималдығының бөліп тарату тығыздығының функциясын қолданған дұрыс. 
`,
  },
  {
    title: 'Шеннон шекарасы және арнаның өткізу қабілеттілігі',
    answer: `Үздіксіз каналдар үшін өткізгіштік қабілетті дискретті каналдарға ұқсас анықтауға болады. Барлық мүмкін ықтималдықты бөліп тарату тығыздығының функциялары бойынша тасымалданатын ақпараттың ең үлкен мәнін іздейміз.
    С=sup I(X;Y).
        f(x)
    Нақты жоғарғы шекті іздеу, жалпы жағдайда, өте күрделі мәселе. Ең маңызды жеке жағдайды қарап шығайық – шектелген тілкемді аддативті ақ гаусстық шулы (ААГШ) канал арқылы ақпарат тасымалдау. Канал кірісіндегі сигнал амплитудасының ықтималдығын гаусстық тәсілмен бөліп тарату үшін ақпарат теориясындағы мағлұм каналдың өткізгіштік қабілетінің формуласын аламыз.
    Каналдың өткізгіштік қабілеті (Хартлей - Шеннон).
    Өткізгіш тілкемінің ені B және қуаттылығы N=N_0 B аддитивті ақ гаусстық шулы идеал каналдың өткізгіштік қабілеті тең болады
    C/(бит/сек) = B log_2(1+S/N)
    Мұнда, алдыңғыдағыдай, S – каналдың өткізгіш тілкеміндегі сигнал қуаттылығы. Мөлшерлілік C – бит/сек.
    Үздіксіз C каналының өткізгіштік қабілетін интерпретациялау үшін, өткізгіш тілкемінің ені 1 Гц болатын өрнекті қарап шығамыз. C/B=log_2f(S/N) функциясының тәртібінің сызықтық қасиетін асимптотикалық түрде атап өтсек болады.
    Сигнал/шу (Signal to Noise Ratio : SNR) қатынасы 0 дБ-дан жоғары берілген болсын.  формула бойынша, өткізгіштік қабілетті екі еселендіру сигнал/шу SNR қатынасының квадраттық жоғарлауын, яғни тоқтаусыз шуда тасымалдағыш қуаттылығының квадратын қажет етеді.
    Сигнал/шу қатынасы берілген болсын, B өткізгіш тілкемі және t тасымалдау уақыты берілген болсын. Сонда каналдың өткізгіштік қабілетін және берілген уақыт аралығында тасымалданған ақпараттың максималды көлемін анықтауға болады. Тағы назар салатын нәрсе, ақпараттың мән берілген v бит көлемінде, үш параметрдің (SNR, B, t) екеуін ерікті түрде түрлендіруге болады, ал үшінші параметр (8.11) қатынасынан және v = C ∙ t шартынан анықталатын болады. 
    (8.11) қатынасты ықыласпен қарап шықсақ, маңызды сұрақ туындайды: өткізгіш тілкемінің ені шексіздікке ұмтылса каналдың өткізгіштік қасиеті қалай өзгеретін болады? Жауабы айқын емес, себебі тілкемнің кеңеюуі N шу қуаттылығының жоғарылауына себепші болады. Шу қуаты тоқтаусыз N_0 спектральді тығыздықта өткізгіш тілкемінің еніне пропорционал болады. Тілкем қаншалықты кең болса, қабылдағыш шығысындағы шу соншалықты көп болады.
    N=N_0 B
    `,
  },
  {
    title: 'Сызықтық блоктық  кодтар. Кедергіге тұрақты кодтау',
    answer: `Нақты деректер беру жүйелері кемелсіз. Ақпараттық технологияларды қолдана отырып, біз сақтауға арналған ақпарат беруді, қателер (қате ықтималдығы) мүмкіндігін қарастыруымыз керек. Бұл бірінші кезекте қолданылады және
    •	жоғары тығыздықтағы ақпарат құралдары (магнитті сақтау медиа, CD-ROM, DVD) туралы жазу, ақпаратты сақтау.
    •	шектеулі сигнал күші (спутниктік және ұялы байланыс) бар деректерді беру
    •	ақпаратты шулы сигнал арналарына беру (мобильдік телефония, жоғары жылдамдықтағы сымды сілтемелер)
    •	Сенімділік ақпарат талаптарға жоғары байланыс арналары (компьютерлік желілер, деректер беру желілері қысу)
    Жоғарыда аталған барлық жағдайларда, қателерді бақылау кодтарын пайдаланыңыз. Әр арна үшін түзету - кодтау теориясы, сізге табу және түзету әдісі қателерді таңдауға мүмкіндік береді . Өзара араласудың жұмыс істейтін, толықтыратын екі әдісі бар.
    •	Қатені түзетуге арналған кодтау - қабылдағышты  анықтайды және қателерді түзетеді;
    •	Қатені түзетуге арналған кодтау - қабылдағыш қателікті анықтайды және қажет болса қателік блогын анықтауға қайта сұраныс  жасайды.
    Соңғы әдіс кері байланыс арнасын көздейді және қате ықтималдық қажет болғанда,  жеткілікті төмен немесе тіпті төмен арналары өз өтінімін табады . Бұл жағдай есептеу желілерде және интернетте жиі кездеседі . Әдеттегі мән қате ықтималдығы компьютерлік желілерде кодтау 10-6 биттік  бағамын құрайды. Шағын резервтеу қарапайым кодтары 10- 9 бар мүмкіндік береді және одан төмен пайдалану ықтималдығына қол жеткізуге болады. 
    Ескерту. Қате ықтималдық талабында 10- 9 дәрежесі тым ұлғайған емес. Компьютерлік желілер, мысалы, жер жұмыстары өндірісінде талшықтың келтірілген зияны, ұқыпсыз байланыс нәтижесінде байланыс үзілуі мүмкін: кабель, модем және т.б. Бұл үзілісті декодермен  тез анықтаған жөн,жиілігі күрт артқан жағдайда ажыратылған сигнал жіберуін сұрайды.
    Келесі бөлімдерде, желілік кодтау идеясы  түзету  блок кодтарында егжей-тегжейлі түсіндіріледі. Мұнда біз қарапайым деректерді түзету - кодтауды беру моделі деп санаймыз.  
    
    Источник -> Кодер Источника - u сообщение -> Кодер -v кодовое слово-------->   Передатчик
                                                                                    Канал + Шум
    Получатель <- Декодер источника <-u^_ декод. сообщ.- Декодер <-r принятое слово- Приёмник

    Біз ақпаратты құрылымын егжей-тегжейлі ашып беру үшін,  Хемминга1 блок кодын пайдаланамыз. Енді біз оның кестелік сипаттамасына тоқталамыз. Арна кодері ақпараттық сөздерді және V код сөздерін  2.1-кестеге сәйкес ауыстырады. 
    Таратқыш сигналдарды реттейді, V кодтық сөзіне сәйкес сигналдарын қалыптастырады және арнаға жібереді. Қабылдағыш декодер кері өзгеріс нәтижесінде екілік код алады.
    `,
  },
  {
    title: 'Туындаушы матрица',
    answer: `Маңызды отбасылық кодтары желілік екілік блокты кодтарыды қалыптастырады. Бұл кодттың тамашалығы, бұл ақпараттық және кодты сөздерді екілік векторлар түрінде ұсынылуында, осылайша біз енгізілетін векторлар және матрица компоненттерін сызықтық алгебралық аппаратын пайдалана отырып, кодтау және декодтау процестері  0 және 1 символы арқылы жүргізіледі. Екілік компоненттері бойынша операциялар екілік арифметика ережелері бойынша дайындалады, арифметикалық модуль бойынша 2   деп аталады. 
    Көріністі математикалық тұрғыдан алғанда, біз Галуа сипаттамалары арқылы екі алғашқы ретті GF (2) өрісті салдық . Галуа өрістердің жалпы теориясы  р  ретіне тән т - GF(pт)өрісін құруға мүмкіндік береді, мұнда р-жай, т-кез келген соңғы бірлік. GF(pт)  кеңейтілген өрістерге өту кодтарды құрастыруға мүмкіндік береді, екілік кодпен салыстырғанда жаңа мүмкіндіктер бар. 
    Атап айтқанда, Рид-Solomonas коды GF (2т) символдарында т> 2 ақпараттарды аудиода, СD ойнатқыштарында қорғауға сәтті қолданылады.
    Кодер блоктық екілік (n,k) - коды көптеген 2k ықтималды екілік ақпараттық сөздерді     2k  n-өлшенген кодты сөздерде көрсетеді(теориялық тұрғыда бұл екеуінің арасында келісілген байланыс жүреді) (2.2 сурет). 
    к биттік ақпараттық кодтаудың орнына арнада  n биттік кодтау векторы жүреді. Бұл жағдайды жылдамдықты шамадан тыс кодтау деп айтуға болады.
    `,
  },
  {
    title: 'Синдромды декодтау',
    answer: `Декодер мақсаты, код құрылымын пайдалана отырып, алынған R сөзін сәйкес берілетін ақпарат векторын қалпына келтіру.
    Қарастырылып отырған код жүйелі болғандықтан, үш тексеру символдарды ақпараттық вектор арқылы көрсетейік:
    u_0 = u_3 ⊕ u_5 ⊕ u_6, u_1 = u_3 ⊕ u_4 ⊕ u_5 и u_2 = u_4 ⊕ u_5 ⊕ u_6
    Арнада қате орын алса, алған R вектор  кем дегенде теңдеулердің бірі болып табылмайды. Алынған тексерілген қатынастарды r векторының компоненттерінің көбейтіндісін теңдеулер жүйесіне жазамыз:
    r_0 ⊕ r_3 ⊕ r_5 ⊕ r_6⊕ = s_0
    r_1 ⊕ r_3 ⊕ r_4 ⊕ r_5⊕ = s_1
    r_2 ⊕ r_4 ⊕ r_5 ⊕ r_6⊕ = s_2
    Осылайша, пайда болған үш бағандардан G (2.2) матрицасынана ⊕ операциясын алдық.
    Теңдеулер жүйесі нәтижесінде кем дегенде бір құрамдас {S_0,S_1,S_2} бөліге нөлге тең болмаса, арнада қатеторын алды.
    Тексеру теңдеулер жүйесін нысанға жазамыз. (2.5) пайда болған желілік кодтың тексеру матрицасы келесі формуламен анықталады:
    H_(n-k)*n = (I_n-k P_k*(n-k)^^T)
    мұндағы  H_k*(n-k) - ауыстыру матрицаcы, яғни k*(n-k) ауыстыру арқылы матрицаның    P_k*(n-k)  жолдарының ауыстыру матрицасы. Содан кейін теңдеулер жүйесі валидация болуы мүмкін түрінде жазылған
    s = r ⊙ H^T 
    S векторы синдром деп аталады. Осылайша, S компоненттерінде кем дегенде бірі нөлге тең емес болмаса, қате анықталды. Теңдік (2.9) түрінде жазылған.
    s = r ⊙ (I_n-k/P_k*(n-k))
    Медицинада синдром термині ағзаның белгілі бір ауруын сипаттау үшін пайдаланылады. 
    `,
  },
  {
    title: 'Сызықтық блоктық кодтардың қасиеттері. Хэмминг ара қашықтығы және тузету қабілеттілігі',
    answer: `Алдыңғы бөлімдердегі Хемминг кодының  мысалдарында сызықтық блокты кодтың негізгі құрамы көрсетілген және декодтау синдромының әдісі келтірілген. Мынадай сұрақ туындайды: "Жақсы" кодты "жаман" кодтан қалай айырамыз және қалай іздейміз? Келксі параграфтарда біз бұл сұрақтарға жауап беруге тырысамыз.
    Хемминг арақашықтығы және түзету қабілеттілігі 
    Декодер процесін жақсы түсіну үшін геометриялық кеңістікті қолданамыз. Кез келеген сызықты кодқа тиесілі 0 векторы n өлшемді кодта ерекше орын алады. Бұл сызықты код құрамына негізделген. Осында n өлшемді кодында v1,v2,v3 векторлары "о" символымен белгіленген. Қабылдауы мүмкін r векторы "х" символымен белгіленеді. Декодтау аймағындағы нүкте орталығының айналасында v1,v2,v3 кодтық сөзі, жазықтықтағы бейнелі кодтық сөзге сәйкестендіріледі. Егер r векторы көлеңкеленген аймакта орналасса, онда декодер тұтынушыға v1 кодтық сөзін шығарады.
    Арналарда v1 сөзі жіберілсін. Арнаны бұрмалаудың нәтижесінде декодтаудың және қабылдаудың үш орны бар: 
    •	Бірінші жағдайда, е1 қателік вектооры v1 декодтау облысына тиесілі нүктеге бағытталған векторда көрінеді. Декодер тұтынушыға арнада пайда болған сөздерді жөндей отырып, берілген v1 сөзін шығарады.
    •	Екінші жағдайда, е2 векторы v2 декодтау облысындағы v1 векторына аударылып көрсетіледі. Дегенмен, қабылданған v2 векторы кодтық сөз болмағандықтан қате анықталады.
    •	Үшінші жағдайда, е3 векторының қателігі v3 кодтық қате сөзіне берілетіні көрсетіледі. Анықталған қателіктің орны бар.
    `,
  },
  {
    title: 'Хэмминг шекарасы және жетілген кодтар',
    answer: `Декодтау облысындағы қиылыспайтын сфералық n өлшемді кодтар барлық кеңістіктегі векторларды жабады, олар нақты және тығыз орналасқан деп аталады.
    Нақты кодтарды қолданғанда әрқашан түзету қателінің орын алуы мүмкін(дұрыс болуы міндетті емес). Хэмминг кодынан бөлек, қазіргі уақытта нақты кодтардың аз екендігі белгілі.
    Нақты екілік (n,k) кодындағы параметрлер арасындағы қатынастан t қателікті таба алатын мүмкіндікті табайық. (n,k) кодты нақты кодтау облысындағы dmin = 2t + 1-ден 2k байланыспайтын t радиусындағы n өлшемді векторлық кеңістікті қалыптастырады. Әр сфераның құрамында l кодтық сөзіне сәйкес келетін қашықтықтағы барлық n өлшемді векторлар бар, 0 < l < t. Осылайша, әр сферада n өлшемді векторға тең.
    1 + n + (2/n) + ... + (n/t) = ∑_l=0^t(n/l)
    Сферадағы қиылыспайтын ортақ көлем n өлшемді векторлық кеңістігінің көлемін көтере алмағандықтан, екілік код үшін:
    2^n >= 2^k ∑_l=0^t(n/l)
    немесе
    2^n-k >= ∑_l=0^t(n/l)
    Теңдік тек нақты еселік кодта орын ала алады. Алдынғы формула Хэмминг шегі деп аталады. Хэмминг шегі t қателігін жөндей алатын n ұзындықтағы тексерілген екілік код символын төмен бағамен қарастырады.
   `,
  },
  {
    title: 'Декодтау қателіктерінің ықтималдылығы',
    answer: ` Жоғарыдағы тұжырымдарға  сүйене келе біз табылмаған қателер ықтималдылығын анықтай аламыз. Шын мәнінде қате арнадағы жіберілген қате кодтық сөздер басқа кодтық сөзге жіберілсе анықталмайды. С коды болып табылғандықтан жабық кеңістіктегі қосымша операцияда қателіктің өзі кодтық сөз болып табылады. Осылайша қателіктің табылмау ықтималдылығы тәуелсіз оқиғалар цуммасымен анықтаймыз:
    e = v_i, v_i ∈ C и 1 <= i <= 2^k
    Біз жадсыз ДСК Ре қателік ықтималдылығын қарастырып жатқандықтан, е= (0011010) , (0011010) мысалдағы оқиғаның ықтималдылығы мынаған тең
    P_e^^3(1-P_e)^4
    С салмағындағы (n,k) кодтық сөздердің і санын Ai  арқылы белгілейік. С кодының қателік табылмау ықтималдылығы мынаған тең:
    P_r = ∑_i=d_min^^n A_iP_e^^i(1-P_e)^n-i
    Хэмминг коды үшін Ai  мағынасын аламыз:
    A_0 = 1, A_1 = A_2 = 0, A_3 = A_4 = 7, A_5 = 0, A_6 = 0, A_7 = 1
    Егер екілік символдағы бірліктің ықтималдылығы Ре берілсе, онда қателік табылмау ықтималдылығы Алдынғы формула қолданып табамыз.
    Салмақ анықтығын білмей тұрып,қателік табылмау ықтималдылығын былай бағалауға болады:
    P_r = P_e^^d_min ∑_i=d_min^^n A_i(P_e^^i-d_min(1-P_e)^n-i)__}(vertical)<1 <(2^k - 1) P_e^^d_min`,
  },
  {
    title: 'Хэмминг кодтары',
    answer: `Хэмминг коды өте маңызды отбасылық қарапайым сызықты блокты кодты қалыптастырады. Хэмминг коды келесі параметрлер бойынша екілік m>3 кодты анықтайды:
    •	кодтық сөздің ұзындығы n=2m-1
    •	ақпараттық бөлімдердің сандары k=2m-1-m
    •	тексерілетін бөлімдердің сандары m=n-k
    •	тексеру қабілеттілігі t=1, dmin=3
    •	нақты кодтар  
    •	Хэмминг кодының минималды коды dmin=3 болғандықтан, тексерілетін матрицаның бағандары жұп жұппен өзгеше болуы керек(тексерілетін матрицаның құрамында бірдей баған болмауы тиіс). 
    •	dmin=3 минималынан туындаған матрицадағы бағандар өз кезегінде кодтық сөз болғандықтан, әр туындаған матрица кемінд 3 бірліктен тұрады. Егер туындаған матрица (2.14) формуласында көрсетілсе, онда Р матрицасының бағандары кемінде 2 бірліктен тұрады (бұл PT транспонирленген матрица бағанына жатады).
    Тексерілетін матрицаны қарастырайық. (2.8) формуласына сәйкес, ол H(n-k)*n =( In -kPTk*(n-k)) түрі бар. PT  матрицасының құрамында, бағандар мен m=n-k қатарлар бар. Екілік "0" және "1" символдарын қолдана отырып 2m түрлі бағандар алуға болады. йтқанымыздай, әр баған құрамында кем дегенде екі бірлік болғандықтан, бір бірлік құрамында бар нөлдік бағанды және m бағандарын алып тастауымыз керек. Сонымен, 2m-1-m ықтималдылығы қалады. 2m-1-m=k  PT матрицасына тура k бағандар болса, онда барлық ықтималдылықтар пайдаланылған. Осыдан транспонирленген PT  матрицалары өзінде мүмкін екілікті ұсынады. m=n-k ұзындық сөздерінің құрамында кем дегенде екі бірлік бар. 
    `,
  },
  {
    title: 'Кеңейтілген Хэмминг кодтары',
    answer: `Бұл бөлімде Хэмминг кодының тиімді кеңейтілуін қарастырамыз. Ол қосымша кодтық вектордағы қосымша екілік разряд болып табылады, осылайша, әрбір кодтық сөздегі бірлік саны әділ болуы тиіс. Тепе-теңдікке тексерілген Хэмминг кодтары келесі екі артықшылыққа ие:
    •	Кодтың ұзындығы ақпаратты сақтауға және жіберуге ыңғайлы болуы үшін, 2n - 1 нен 2n дейін ұлғаяды.
    •	Кеңейтілген Хэмминг кодының dmin минималды қашықтығы 4 орнына 3 тең, ол бізге 3 дүркін қателікті табуға мүмкіндік береді. 
    Әділдікке тексеру қосымша разрядта, декодерді жаңа режимде қолдану - гибридті режимде табуға және қатені түзетуге мүмкіндік береді.
    Шынына келгенде, Хэмминг кодының барлық векторларының минималды салмағы, нолді есптемегенде 3 тең, онда қосымша әділдікті тексеру разряды бұл минималды салмақты 4 арттырады. Сонымен қатар кеңейтілген Хэмминг коды сызықты болып табылады және минималды қашықтығы dmin=4. Әділдікке тексеру Хэмминг кодын декодтаудан бұрын, қарапайым Хэмминг кодын декодтаудың екі режимін еске түсірейік:
    1. Қателікті табу режимі.
    Егер синдром s != 0 болса, декодер қателік сигналын береді. Хэмминг кодының dmin=3 болса, онда әрдайым <= 2 қысқа қателігі анықталады. 
    2. Қателікті түзету режимі.
    Егер синдром s != 0 болса, онда декодер разрядтың бир бөлігін түзетеді(Хэмминг коды t=1 радиусында жинақталған болғандықтан). Осылайша, декодер бірқалыпты қателіктерді түзетеді. 
    Енді әділдікке тексеру Хэмминг кодына көшеміз. Мұндай кодтарда dmin=4 болғандықтан, режимде қысқа қателікті анықтау 3 төмендейтіні анықталады. Әділдікке тексеру қосымшасы арқылы қателікті түзетуді анағұрлым арттыруға болады. 
    Біріншіден байқайтынымыз, барлық разрядтарды қателікті жөндеу процесінің, тексеруді есптемегенде, әдеттегі Хэмминг кодынан айырмашылығы жоқ. Осылайша бірлік қателікті әрдайым түзетуге болады. 
    Бір жағынан,  бірлік қателік кезінде әрдайым  s_0^~ = 1 теңдігі орныдалатынын байқаймыз.
    Екілік қателік кезінде s_0^~ компоненті әрдайым "0" тең. Осылайша, кеңейтілген Хэмминг кодында қателікті түзетудің жақсартылған алгоритмін аламыз.
    1. Егер s_0^~ = 1 болса, онда бірлік қателікті түзету орындалады. 
    2. Егер s_0^~ = 0 және s^~ != 0 болса, онда арнада түзетілмейтін қателік орын алды және қабылданған сөз не өшірілу керек не арнаға қайта қарау туралы сигнал берілу керек. 
    Осылайша әділдікке тексеру Хэмминг коды 3 жоғары емес қателіктерді анықтауға немесе бірлік қателіктерді түзетуге және бір уақытта барлық екілік қателікті анықтауға қабілетті.
    `,
  },
  {
    title: 'Галуа өрістері',
    answer: `Көптеген А өрісі құрастырылады, егер кез келген  a_i,a_j,a_k ∈ A элементтер "+" қосу операциясымен және "*" көбейту операциясымен анықталса, келесі аксиомалар орындалады:
    Қосу "+"
    (А1) Тұйықталған a_i + a_j ∈ A
    (А2) Ассоциаланған (a_i + a_j) + a_k = a_i + (a_j + a_k)
    (А3) Жалғыз нөлдік элементтің болуы 0 ∈ A, 0 + a_i = a_i
    (А4) Кері элемент -(a_i) ∈ A, -(a) + a_i = 0
    (А5) Коммутацияланған a_i + a_j = a_j + a_i
    Көбейту "*"
    (М1) Тұйықталған a_i * a_j ∈ A
    (М2) Ассоциаланған (a_i * a_j) * a_k = a_i * (a_j * a_k)
    (М3) Жалғыз нөлдік элементтің болуы  1 ∈ A, 1 * a_i = a_i
    (М4) Кері элемент a_i^-1 * a_i = 1
    (М5) Коммутацияланған a_i * a_j = a_j * a_i
    Қосу және көбейту 
    (D) Дистрибуттік a_i * (a_j + a_k) = a_i * a_j + a_i * a_k
    Жоғарыда айтылған аксиомалар кез келген өрісте тең, маңызды ережеге сай: 
    0,1,a,b,c ∈ A орны бар
    1. a+0 = 0 ⇒ a = 0
    2. a,b != 0 ⇔ a * b != 0
    3. a != 0 и a * b = 0 ⇒ b = 0
    4. -(a * b) = (-a) * b = a * (-b)
    5.  a != 0 и a * b = a * c ⇒ b = c
    Сонымен қатар, қосу және көбейту операцияларына кері операция барын ескерейік: алу және бөлу, алу a - b = a + (-b) осылай есептеледі, ал бөлу a/b = a*b^-1 формуласымен есептеледі.
    Дайындалмаған оқырманды аксиомалық құрылыс және өріс деп аталатын алгебралық құрылым қорқытуы, тіпті үрей туғызуы  мүмкін. Дегенмен, өрісте көптеген рационалдық сандар орын алғанына көзіміз жеткенде, бұл қоқыныштың ізі де қалмайды. Есімізге түсірейік, көптеген рационалды сандар құрамында дұрыс және бұрыс бүтін сандар, және де  барлық  n/m- дегі n,m-бүтін және m != 0 сандары бар. 
    `,
  },
  {
    title: 'Циклдік кодтар. Жүйелі циклдік кодтар',
    answer: `Ең алдымен көрсететініміз, тәжірибеде қолданғанымыздай қарапайым сызықты блоктық кодтардың келесідей декодтық синдромды техникалық шығындармен шамадан тыс  байланысуы. Мына мақсатқа арналған екі үлгіні қарап шығамыз. 
    Бірінші үлгіге ISDN-D арнасы арқылы мәліметтерді телефонмен жіберуде    LAPD (Link Asset Procedure on D-channel) мәліметтерді жіберу форматы қолданылады. Кеңістіктің әр бір ұзындығы байтпен берілген (1 байт 8 биттен құралған блокты құрайды). Тексерілген символдар FCS (Frame Check Sequens) ауданындағы ұзындығы 2 байтқа тең. Тексерілетін сомалар көмегімен A (Adress) адрестік кеңістікте, С (Control) командалар кеңістігі мен I (Information) ақпараттық кеңістігінде қателікті табу жүзеге асырылады. Осылайша, блоктың барлық ұзындығы (2+2-f 260+2) =266 байт немесе 2128 битті құрайды. Қарапайым сызықтық кодтың 16-лық тексерілген биттік мәліметтерді қателіктен қорғауы үшін 2112x2128 және 16 х 2128 көлемдік матрицалары туындайды. 
    Циклдік кодтар ұзындық кодтардың ішкі жиынымен келеді. Олар кодтық және декодтық процестерді жеңілдететін жаңа ерекше қасиеттерге ие. Сонымен қатар, циклдық кодтардың түзететін қабілеттілігі көп жағдайда үлкен маңызға ие. 
    Біз тек екілік циклдық кодтардың жобалануымен шектелеміз. Екілік кодтардың компоненттері мен операция жүргізу, екінші модуль арифметикасының ережелерімен жасалатынын ескереміз. 
    Ескерту. Екілік циклдық кодтар Галуа GF(2) кеңістігінде сызықты векторлы кеңістікті құрайды. Тәжірибеде Галуа GF(2m) кеңістік компоненттерінің циклдық кодтары кеңінен қолданылады. Ондай кодтарға БоузЧоудхури-Хоквингем (БЧХ) , Рид-Соломон (PC) кодтарын жатқызамыз. PC кодтары көбіне компакт диск ойнатқыштарында қолданылады.
    С (n,k) сызықтық коды циклдық болып табылады, егер циклдық жылжытудағы әрбір кодтық сөз С кодына тәуелді болса. 
    v = (v_0, v_1,..., v_n-1)
    кодтық сөзін v_i ∈ {0,1}компонентімен қарастырамыз. Циклдық жылжыту барлық компоненттердің бір разряд 10-ға жылуына сәйкес келеді
    v_(1) = (v_n-1, v_0, v_1,..., v_n-2)
    ал сол жақтағы бос орындарды ең шетіндегі компоненттер алмастырады. і-ші циклдық жылжытуда мынадай формула аламыз
    v_(i) = {v_n-i,..., v_n-1, v_0, v_1,..., v_n-i-1}
    Циклдік кодтардың қосымша пайдалы математикалық қасиеттері . Бұл қасиеттердің қолданылуы, қарапайым және нәтижелі кодтау мен декотау процедураларының түзілуіне әкеледі.
    Жүйелі циклдық кодтар
    Төменде шығарылған кодтық сөздерді түзе отырып систематикалық емес кодтар шығады. Алайда, кейбір модификациялық жолдарға сәйкес кодтардың дамуын систематикалық код тақырыбындағы цикылдық код параметірлері арқылы алуға болады.
    Ақпараттық және цикылдық кодтық сөздердің (7,4)-коды, д{Х) көмегімен түзіле келе, көпмүше сәйкестіктерін  Төмендегі кестеде келтіріп жасауға болатын болып табылады.
    `,
  },
  {
    title: 'Туындаушы және тексеруші матрицалар',
    answer: `Циклдық кодтар көптеген сызықтық блоктардың кодтарына сәйкес, басқа да жалпы блоктық кодтардың сызықтық ерекшеліктеріне сәйкес, олар кейбір арнайы қасиеттерімен әдістеріне ықшамды болып келеді. Алдымен кодтан туындайтын матрица цикылын қарастыратын боламыз. Теоремаға сәйкес 3.2.3, әр көпмүшенің цикылдық коды туынды түрінде көрсетілген болып табылады
    v(X) = a(X) * g(X) = a_0g(X) + a_1Xg(X) + ... + a_k-1X^k-1g(X) (1)
    Содан, әр көрсетілімге сәйкес (1) көпмүшенің ауысымдық қозғалысы g(Х),векторға сәйкес келетін болып табылады
    g = (1, g_1, ..., g_r-1, 1)
    Цикылдық тексерілетін матрицалар жүйесі (7,4)-кодтық матрицаны жасаудан шығарылатын С'  бағыталған кодтық формальдыққа сәйкес жасалады. Мұнда, алайда, біз тексерілген байланыс пен қарастырылатын цикылдық кодтар қасиеті шығымымен матрицасы жасалатын болып табылады. Ол үшін, бьекітілген қарапайым қолданыстарға сәйкес 3.2.5 , көптеген туындылар g(Х) бөлінісі  Хп + 1 қалдықсыз болып табылады. Сондықтан, жазуға болатын
    X^n + 1 = h(X) * g(Х) (2)
    Кодтық көпмүшелерді мынадай түрде қарастыруға болады
    u(X) = a(X) * g(X)
    Есептік белгіге сәйкес, (2),туындылар у(Х)h(Х)теңдігі
    u(X) * h(X) = a(X) * h(X) * g(X) = a(X) * [1 + X^n] = a(X) + a(X)X^n (3)
    Көпмүшелік дәрежеге сәйкес а(Х) жоғарыланатын к — 1, алғашқы бөліктердің теңдігі (3) құрамдық бөлшектенетін сапа мазмұны Хк, Хк+1---Хп-1. Бұл шартты қолдана отыра шығыс коэффициенттері үшін  u(Х)һ(Х),жазуға болатын п — к көрсетілетін теңдікпен жасалынатын болып табылады
    Бұл теңдікті матрикалық формада жазуға болады., тексергіш матрицаны тексере келе
    Алынатын белгілі матрицалық деңгейлер үшін синдромдық деңгейлер үшін жасалатын болып табылады.
    `,
  },
  {
    title: 'Циклдік кодтардың сұлбалы іске асыруы',
    answer: `Циклдың сыртқы түріне сәйкес кодты салыстыру арқылы басқа да әдістер бойынша кодтаумен қортындыланатын техникалық пайдаланымдар. Кодтау сызбасын қолдану мен декодерлік  тізбемен жүзеге асырылады.
    Кесте. Алгоритмдік  Евклид көпмүшесін бөлу 
    X^4  -  X^2  +  X  +  1  | f(X)
    X^4     X^2              | X^2 g(X)
     -       -      X  +  1  | остаток
    Өңделетін байланысты жылжыту арқылы қажетті тиімділіктермен жасалатын ақпараттардың массалық ауқымдылығымен жүзеге асырылады.
    Мәні. Бұл ерекшеліктер бардық цикылдық кодтаорға сәйкес  Галуа жазықтығы арқылы жасалатын болып табылады. Таралымның қарапайымдылығы үшін, мұнда біз тек екі кодты шектеу арқылы т.б. циклдық кодтармен жүзеге асырылатын болып табылады СҒ(2).
    Сондай ақ қысым процедурасына сәйкес көпмүшелердің негізі болып табылатын кодтар мен цикылдық кодтар, ең алдымен барлық түрде көрсетіп, кері байланысты жылжыту арқылы регистр көмегімен пайдаланатын процедураның бірі болып табылады. Бастамасы үшін, көпмүшелерді бөлу сәйкестігіне қарай f(X) = 1+Х+Х2+ХА көпмүшелер g(Х) = 1+Х2 алгоритм бойынша Ев- клид (кестесімен. 3.5) сызбасын пайдалана отырып (сур. 3.5). Кестеде 3.5 бөлгішпен д(Х) көпмүшелерге дейінгі X2, ондағы дәрежесіне сәйкес f(X) теңдігі 4 пен бөлгіш есептемелері арқылы f(X жүзеге асырылады). Нәтижесінде, алынатын көпмүше дәрежесі, аз көлемде  д(Х), қалдықтарды бөлу арқылы бірдестен жүзеге асырылатын f(X) тан д(Х)болып табылады.
    `,
  },
  {
    title: 'Циклдік кодтардың синдромы және қателерді бақылау. Қателер пакеті',
    answer: `Ақпаратты беру модельін қарастыра келе. Арна арқылы берілетін шуылды кодтау сөзімен і>(Х)көпмүшелі қателіктер қосылатын болып табылады (Х).Нәтижесінде,  көпмүшелі қабылданған кодтық сөздердің түрі:
    r(Х)=v(Х) + е(Х) 
    немесе
    r(Х) = а(Х)g(Х) + s(Х),
    Мұндағы: g(Х)синдромды білдіреді,егер r(Х)кодтық сөз, сонда s(Х)бос көпмүше.
    Ақпаратты тарату моделі
    Синдром s(Х) Евклид қысымдық алгоритім көмегімен есептеліп жасалған болып табылады. Қандай есептемені пайдалана отырып шынжырды құрастыруға болады, жүйелі код кедірінде көптеген жағдайлар жасалуы мүмкін. онда қалдық қысымды анықтау арқылы көпмүше арнасы анықталады көпмүшелер үшін g(Х). Бастапқыда, декодердтағы нөлдік өнімділік разрядты синдроммен өндірілетін Sо,S1,..…Sr-1-ға регистірлік синдромда r алғашқы қабылданатын арнасы бит болып табылады. Бөліністен қалған қалдығы r(Х) көпмүшені тудырушы ретінде g(Х) Евклид алгоритімі арқылы синдром регистіріне енгізілетін болып табылады. Тіркелетін процедураларды есептеу үшін мысалдағы синдромдық есептемелерді қарастыру жасалған S(X) болып табылады.
    Мысал: Хэмингтың синдромдық цикылын есептеу (7,4)-коды. Ондағы мысал ерінде, белгілі цикылды қарастыра келе (7,4)-  Хэмминг кодынның көпмүшесін  д(Х) = 1 + X 4- X қарастыратын боламыз3. Ондағы ақпараттық вектор жолы  = (1001). Біздің алдыңғы мысалдан біліп отырғанымыздай, бұл векторға сәйкес кодтық сөздердің жасалуы мынадай V = (011 1001).
    `,
  },
  {
    title: 'Меггитта декодері',
    answer: `Циклдық кодтарды декодирлеу үдерісі  (жалпылама барлық сызықтық кодтарға сәйкес) үш деңгейге бөліп көрсетуге болады:
    1.Синдромды есептеу
    2.Қабылданған сөдердің қарапайым компоненттерін анықтау
    3.Қателіктерді жөндеу немесе жөнделмейтін қателіктерді сигнал арқылы жөндеу
    Қабылданған сигналды өңдеу маңызды бағаланады, сондай ақ оларды алмастыруға да болады, ондағы декодирлеу «жіңішке орын » болып қала береді. Ол ақпраратты беру шынжыоры ретінде қалыптастырылады. Бұл өте үлкен апараттардың шығынын декодирлеу ұзындығымен жоғары код арқылы түзету арқылы жүргізіледі
    Салыстырмалы қарапайымдылыққа сәйкес синдромды есептеу процедурасы кодтар үшін жасалған. Суретте 3.12 көрсетілгендей, синдромды есептеп табу қиын ол кодтық сөздің ұзындығына аз тәуелді етіп анықталады, негізінен, тексерілетін символдар көмегімен жасалады.
    Қате болған компоненттерді анықтау арқылы синдром бойына барлық сызықтар код арқылы жеке принципке сәйкес кестелік синдром көмегімен жүзеге асырылады. Кодтауды корекциялаумен қатар кодтық сөздердің ұзындығы экспоненциалды өсіммен  теңесу әдісі арқылы пайдаланып жасалады. Мұнда көмекке кейбір цикылдық кодтардың ерекшеліктерімен жүргізілетін үдерісті декодирлеу кейбір жағдайға сәйкес жасалатын болып табылады.
    Қазіргі бөлімде біз айтарлықтай қарапайым сызбаны ұсынтын боламыз ондағы екеулік цилиндірлік декодер (n, к)-кодтарымен жалпылама түрде жасаймыз
    Одан шығарылатын модельдеді ақпараттық суреттермен. 3.11 жасалатын болып табылады. Бұл жүйеде қабылданған көптеген белгілер арқылыг(Х),кодтық көпмүшелер арқылыи(Х),көпмүшелердің қателігінсіз жүзеге асырылатын болып табылады (Х).
    Алғашқы қадамы ретінде синдромды декодирлеу болып табылады. Мұнда екі түрлі туындауы мүмкін
    1.	Табылған синдром қателікке сәйкес  (п — 1)-ші сөз компоненттерімен қабылданып, одан еn_і = 1
    2.	Синдромдық сәйкестік қателік компонентке әсер етеді.
    Үдерістің келесі жағдайына орай,  3.11 суретте көрсетілгендей жылжытылған сөздер үшін қайталнып жасалған болады r1(Х). Содан, есептеу үшін .S(1) (X) қажетсіз әрекеттерді жасай келе, ана- логиялық табқандармен s(Х) жүргізіледі. Теоремаға сәйкес 3.6.1, синдром s(Х) пайдаланылатын синдром s(1)(Х) бір такт арқылы сызба көмегімен, суретте көрсетілген болып табылады 3.15.
    Одан басқа, анықтамаларға сәйкес s(Х),синдромды алуға сәйкес S(1)(Х), S(2)(Х),..., S(n_1)(Х) жасалады. Егер синдромдарды корректирлейтін болсақ, онда сол арқылы пқандай да бір келтірілген қандай да бір синдромдардың жүруімен жасаладыз S(Х) = S(п)(Х)көпмүшелерге сәйкес r(Х).Алайда, синдромдық жұмыс үдерісіне сәйкес, келетінеen-1 = 1, көпмүшелі кейбір компоненттері r(Х)жөнделген болып табылады. Мұндай жағдайдағы кейбір синдромдар' ары қарай жүргізіледі S(1)(Х), S(2)(Х),..., S(п-1)(Х).Қарапайым жағдайларды қарастыра келе жасалады.
    `,
  },
  {
    title: 'Хэмминг циклдік кодтары. Голлея екілік коды. CRC коды',
    answer: `Циклдық кодтар Хэмминг тізбесінің маңыздылығымен маңызды кодтық цикылды түзеді х (п,k). Хэмминг код сәйкестіктеріне қарай, көптеген сызықтық кодтарға сәйкес, қарастырылатын бөлім арқылы жүзеге асырылатын болып табылады 2.4. Хэмминг коды, цикылдық құрылымға сәйкес, қосымша жағдайлармен, біршама пайдалы қасиеттер болып табылады.
    Әдістерді анықтау арқылы цикылдық кодтарды пайдаланумен пайдаланылатын түсініктер көпмүшелермен жасалатын болып табылады.
    Көпмүшелік р(х) дәрежеге сәйкес т аталмыш жағдайлар арқылы СҒ(2), көпмүшелікке бөлінбей коэффициент дәрежесімен СҒ(2) үлкен етіп т,жасалады 0. Қарастырылған көпмүше секілді р(х) аталмыш дәрежелермен дәреже атауларына сәйкес п, көпмүшелердің Хп + 1 бөлінуі р(х) қалдықсыз, тең п = 2m — 1.
    Көпмүшелер маңызды роль атқарады техникалық беріліс хабарламаларында, мысалы, көпмүшелер дәрежесі т = 23 қондырғыда қолданылатын аралас символдармен желіде  ISDN мен  хDSL сәйке келеді. Негізгі көп мүше болып табылатын құрылыммен жүзеге  асырылады. Мобилды байланыс жүйесінде хабарланатын келесі жағдайларға сәйкес жасалады.
    Голлея екілік коды
    Теңеспелерді пайдалана отырып  (2.25) көптеген ауысымдарды, жасаймыз. [С23 + С2'3 + С23 +С23]212 = 223. Жүргізілетін гипотезаға сәйкес,  23-өлшемді екілік кеңістікке қатар орнатылған радйустық сферасымен жасалады 3.
    Бұл теңеуді ұсыну үшін қажетті (жеткіліксіздерге сәйкес) заманауй шарттарға сәйкес (23,12)-коды, барлық үш қателіктерді жөндеумен жүргізіледі. Мұндай әсер етуге сәйкес, Голей швейцарымен бірге 1949 жылы, жасалады. Ерекше күштерге сәйкес алгебралық құрылымдықпен қатар, түрлі математикалық бағыттармен жүзеге асырылады, сондықтан, әдебиеттердегі қанда да бір жазбалармен тең келеді |8].
    Голей кодына сәйкес көптеген бейнелердің көрсетілімі түрлі конструкциялық кодтармен .	Х^23 + 1 = (1 + Х) д_1(Х)- д_2(Х)
        д1(Х) және д2(Х) ұсынылып көрсетілген.
    Голлей коды декодирлеуге сәйкес жасалатын қателермен жүргізіледі.Бұл әдіс синдромды есепитеп қолдану арқылы түрлі регистірлерді жылжытумен сызба көмегі арқылы ағылшын типтес түрде жасалыды сур. 3.21. Голейдің[7] декодерлік код жазбсының модификациясы қателіктерді ұстау арқылы, жөнделетін коррективтерге сәйкес ұсталынатын қателіктермен  Т. Касамнмен ұсынылған болатын.
    СRС кодтары
    Шамалас құрылымдық кодтарды қолдану негізінде ондағы бақылау қателіктері болып табылатын цикылдық шығын кодының көмегімен,  ' СRС коды ( Cyclic redundancy check) (аталмыш кодқа сәйкес жасалады Аб- рамсона. Пакетті тәртіпке сәйкес мәліметтерді бөлу, бұл кодты қолдану үшін анықталатын толық блок мәліметтері үшін  (ҒСS - Frame Checking Sequence) жасалады. Жүйелік мысал ретінде ҒСS  берілген стандартты негіз болып табылатын  Х.25 (НDSL), ISDN, DECT и LAN. CRC кодтары Хэмминг кодымен цикылдық кеңейю арқылы жүзеге асырылады.
    Көпмүшелік  р(Х) – дәрежеге сәйкес  т, көпмүшелердің бірі болып табылатын СRС коды д(Х) шығармашылық ретінде қолдануға болады.
    `,
  },
  {
    title: 'Қысқартылған кодтар. АТМ қолданылу мысалдары',
    answer: `Біз қарастырған барлық циклдық кодтарда кодты сөздердің ұзындығы таңдалған көпмүшенің дәрежесімен анықталады. Бұл жағдай кодталып жатқан блоктағы ақпараттық разрядтардың санына үлкен шектеулер қояды. Сонымен қатар, қазіргі уақытта қолданылып жатқан ақпарат тасымалдау стандарттарында ақпараттық блоктардың ұзындығы ауқымды шектерде теңселуі мүмкін. Осыған сәйкес, кодтау сонымен қатар дерліктей икемді болуы қажет.
    Бұл жерде көмекке циклдық кодтардың негізінде құрылған қысқартылған кодтар келеді. Біз m = 5 көпмүшесін таңдаған болайық. Бұл көпмүшенің негізінде Хэммингтің циклдық (31, 26) кодын құруға болады. Бұл кодтың үлкен разрядтарында барлық үш нөлді кодты сөздерді қамтамасыз ететін көптік сөздерін қарастырайық. Бұл көптік Хэммингтің қысқартылған (28, 23) кодын құрайды. Қысқартылған код циклдық кодтың барлық қасиеттерін сақтайды, себебі декодтау кезінде біз кодты сөздерге үш жетіспейтін нөлді қоса аламыз және оларды Хэммингтің негізгі (31, 26) кодының векторы ретінде қарастыра аламыз.
    Келесі мысал ретінде байланыс желісінде қолданылатын Файер кодын келтіруге болады. Бұл код Хэмминг кодының қысқартылуы болып табылады. Хэммингтің сәйкес коды өлшеуге мүмкін емес 3014633-ке тең үлкен ұзындықты құрайды және 40 тексеру символдарынан тұрады. Оның негізінде ұзындығы 40 символға дейін баратын қате пакеттерін анықтай алатын немесе ұзындығы 12 символға баратын барлық пакеттерді түзете алатын Файер (224, 184) коды құрылады. Бұл код тоқтаулармен нәтижелі күрес жүргізе алады және GSM ұялы желісінде ақпаратты басқаратын SACCH (Slow Associated Control Channel) каналын қорғау қолданылады.
    `,
  },
  {
    title: 'Оралған кодтар. Кодер және импульсті дыбыс беру',
    answer: `Заманауи ақпараттық техникада түйінделген кодтар блоктық секілді маңызды рөл атқарады. 50-ші жылдары бірінші мәрте түйінделген және блоктық кодтарды салыстыру әрекеті жасалған болатын. Сол уақыттан бастап блоктық кодтар дереу нәтижелі қолданысқа түсті, ал түйінделген кодтар артта қалған болатын. Бұл процесс 1967 жылы түйінделген кодтарды декодтаудың тиімді алгоритмі табылғанға дейін жалғасты. Бүгінгі күнде түйінделген кодтар заманауи байланыс системаларында жетекші рөл ойнайды. Бұл бірінші орында цифрлық радиохабарға және GSM желілік мобильді байланысына қатысты. Сонымен қатар түйінделген кодтар радиотолқындардың көп сәулелі таралуынан пайда болған кедергілерді жеңуге мүмкіндік береді. Соңғы жылдарда түйінделген кодтар турбо-кодтардың ашылуына байланысты одан әрі дами бастады. Турбо-кодтарды заманауи деректерді тасымалдау системаларында қолдану ақпарат тасымалдау жылдамдығын каналдың өткізгіштік қасиетіне жақындатты. Бұл күтпеген оқиғаға байланысты радиохабардың мобильді желілерінде UMTS - (Universal Mobile Telecommunication System – ағыл.) стандарты қабылданды.
    Түйінделген кодтардың блокты кодтардан басты айырмашылықтары мыналар:
    1.   Түйінделген кодтар дерек ағындарын уақыт кеңістігінде үздіксіз
     кодтауға және декодтауға мүмкіндік береді.
    2.   Түйінделген кодтар блоктық синхрондауды қажет етпейді.
    3. Түйінделген кодтарды қолдану өте сенімді ақпарат тасымалына мүмкіндік береді.
    4.   «Жақсы» түйінделген кодтар моделдеу әдісімен табылуы мүмкін.         Түйінделген кодтар теориясының толық мазмұндамасы және оның қолдану саласы бұл кітаптың тақырыбынан шығып кетеді. 
    Кодер және импульсті дыбыс беру
    «Түйінделген кодтар» термині инвариантты сызықтық системалар LTI(Linear Time Invariant – англ.) теориясынан пайда болған. LTI системалар теориясында түйіншек деп қандай-да бір сызықтық операцияға тән нышанды айтады. Бұл теорияның тұрғысынан алғанда, кодтау уақытта өзгермейтін параметрлі сызықты схема көмегімен жүзеге асатын кодты жүйелілік символдардың ақпараттық реттілігінің кескіні болып табылады. Мұндай кескін 4.1 суретте көрсетілген. Ақпараттық символдардың реттілігі кірген ағынды k дербес реттіліктерге бөлетін демультиплексорға түседі.
    `,
  },
  {
    title: 'Полиномиалды көрініс. Граф жағдайы',
    answer: `Блоктық кодтарға ұқсас, түйінделген кодтар көпмүшелер көмегімен сипатталуы мүмкін. Сонымен қатар, бұл кодтардың ұқсастықтары ғана емес, айырмашылықтары да айқын бола бастайды. 
    Түйінделген кодтардың кодерлерінің импульстік жауаптарын mi дәрежесінің көпмүшелер себепшісі ретінде қарастыратын боламыз
    g_ji (X)=g_(ji,0)+g_(ji,1) X+⋯+g_(ji,m_i )+X^(m_i ).
    Бұл жерде X айнымалысы «ысырылу көрсеткіші» рөлін ойнайды және басқа ешқандай мағнасы жоқ, Xn қандайда-бір санақ нүктесіне салыстырмалы n-реткі ысырылу (мысалы, кіріс реттілігінің бастамасы).
    Әдебиеттерде көп жағдайда X айнымалысының орнына D (delay сөзінен – тоқтау – ағыл.) айнымалысын қолданады.
    Алдыңғыдай біз тек екілік кодтарды қарастырып жатқандықтан, көпмүшенің барлық коэффиценттері GF(2)-ге тиесілі және көпмүшелерге қатысты барлық операциялар 2 модулдегі арифметика қағидалары бойынша жүргізіледі.
    Граф жағдайы
    Кодерлер регистрінде екілік разрядтардың шектелген саны бар, демек, кодер болатын ахуалдар санының шегі бар. Сол себепті кодтау процессін кодер ахуалдарының ауысу реттілігі деп сипаттауға болады. Мұндай амал шешуші болып табылады және түйінделген кодтың қасиеттерін тереңірек түсінуге септігін тигізеді. Сонымен қатар ол кодтау және декодтаудың нәтижелі алгоритмдерін құруға себепші болады.     
    `,
  },
  {
    title: 'Оралған кодтардың құрылымы',
    answer: `Алдыңғы бөлімде түйінді кодтар сипаттамасы желілік  диаграмма және диаграммалар негізінде жүргізілді. Әлбетте, екі диаграммада  зерттелетін код туралы толық ақпаратты қамтитыны түсінікті. Түйінді  кодтар диаграммалар көмегімен олардың арасындағы ауысымды және құрылымы мен қасиеттерін тереңірек зерттеуге мүмкіндік береді. 
    Бүгінгі күнге дейін декодтау мәселелері талқыланбаған. Түйінді  кодтарды декодтау осы кітаптың келесі бөлімінде қарастырылады. Алайда, желілік диаграммаға негізделген 4.8 сурет. қойылатын негізгі талаптағы жақсы кодтарды қазір анықтауға болады.  
    Әрбір кодты тізбек желілік диаграмма жолы бойынша сәйкес келеді, алайда, бұл жолдар арасындағы айырмашылық неғұрлым үлкен болса ,соғұрлым түйінді  кодты сөзді тану оңайырақ және декодтау қателіктерінің ықтималдықтары азырақ болады.
    Жолдар арасындағы айырмашылықты қалай бағалау керек?
    Біз екілік желілік блок кодтар қасиеттерін (2, 3 тараулары) талқылаған кезде, негізгі критерий айырмашылықтарының саны сәйкес келмейтін символдар болды, яғни қашықтықты Хемминг. DMIN кодтары үшін ең аз қашықтықты Хемминг ерекше рөл атқарды, бірақ сызықтық блок кодтарда салмақ сөздерден кем емес. Бұл ойлауда сверточных кодтар қолданылуы мүмкін. Бұл жағдайда, біз нөлдік сөзін бір нөлден тұратын кодты вектор деп есептейміз. 
    Егер Гофрдың кодтарын ақпаратты векторлардың ақырғы ұзындығы деп қарасақ, біз оларды сызықтық блокты кодтар деп болжауымызға болады және тарауда оларға барлық дәлелдер қолданылған. 
    Кодты сөздер арасындағы немесе желілік жолдар диаграммасы арасындағы қашықтық Хемминг Метрикасына бағытталатын болады. Шексіздікке дейін, кодтау нөлдік күйде басталады және аяқталады,сондықтан, нөлдік емес кодтау  тізбегітегі желілік диаграмма жолға сәйкес келеді, нөлдік күйде тармақталып, содан кейін онымен құйылады.
    `,
  },
  {
    title: 'Шынтуайтты максимум бойынша декодтау. Витерби детекторы',
    answer: ` Әрбір цикл үшін барлық құю жолдарына, декодер тек ең жоғары метрикалары бар  жолын жалғастыруды таңдайды. Жалпы, Витерби алгоритмінің сипаттамасын  күрделі бағалай аласыз:
    1. Декодердың М жадысында 2m бар болуы ықтимал.
    2. Дешифраторды декодтаудың әр қадамы  2m+ 1 өсімімен анықталады.Ішінара метрикалар есептеледі, және салыстырылатын болып табылады.
    3.Декодтаудың әр қадамда 2m жолдары жазылған, осы жолдар ішінара метриканың жолдары.
    Декодер Витерби күрделілігі экспоненциальды  декодер жадысын арттыруын көруге болады.
    Мысал: метрикалық декодер туралы ақпараттарды екілік симметриялық арна береді (DSC).
     Екілік арна жадысыз  (DSC), анықтау бойынша, онда арна ықтималдығы дербес бит бұрмаланған түрде  Е бір-біріне беріледі (4.20 суретті қараңыз).
    x_1 -> y_1
         X
    x_2 -> y_2

    Сурет. 4.20. екілік симметриялық арна үшін ақпаратты беру диаграммасы.
    Декодтау кезде ең жоғарғы шартты ықтималдығы нақты кодық сөздерді сұрайды (4.67). Шартты ықтималдығы берілген v_i   сөзі r оқиғаларын қабылдайды ,DSC үшін тек қана батыл қашықтық d_H(r,v_i) Хеммингы  анықталады. Егер жүйелі коды  ұзындығы J болса, онда бұл шартты ықтималдығы бұрмалау d_H(r,v_i) екілік ықтималдығы көбейтіндісіне тең  және дұрыс қабылдау J - d_H(r,v_i) бит. 
    Витерби детекторы 
    Нақтылық кодтау және декодтау алгоритмін принциптері Витерби сәтті анықтау кезінде пайдаланылуы мүмкін сигналдар (ұялы байланыс желісі) жарқырайды және магнитті ақпарат құралдарымен анықталдады. РА нүктесінің құрылымымен арна нақтылық кодтау құрылымы сәйкес келеді. Бір кіріс және бір шығысы бар. 4.25 суретте бұл онда арна моделін көрсетеді. Бұл модельде, әрбір дискретті символы тізбегі d[n] желісі арқылы өтеді. Осылайша әрбір шулы емес арна дискретті символ уақыт  болып табылатын кіріс  x_i[n] және шығыс f_i[n] коэффициенті тәуелді.
 `,
  },
];
